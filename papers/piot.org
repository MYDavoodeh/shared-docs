#+TITLE: پیش‌نویس جزئیات پروژهٔ درس مباحث ویژه -- راه‌اندازی خانه هوشمند
#+AUTHOR: ​@@latex:{@@​محمدیاسین داوده و مهدی صفریان​@@latex:}@@

#+LATEX_HEADER: \def\UrlBreaks{\do\/\do-}

#+OPTIONS: toc:nil;
#+LANGUAGE: fa
#+LATEX_HEADER: \usepackage{xepersian}\settextfont{XB Roya}\setlatintextfont{XB Roya}\setmonofont{Iosevka}
#+LATEX_HEADER: \usepackage{titlingpage1} \project{گزارشات مرتبط با درس آزمایشگاه پایگاه داده} \supervisor{بابک فرهادی}

# #+LATEX_HEADER: \xpretocmd{\tabular}{\begin{latin}}{}{} \xapptocmd{\endtabular}{\end{latin}}{}{}
#+LATEX_HEADER: \captionsetup[table]{name=جدول}
# #+LATEX_HEADER: \captionsetup[figure]{labelformat=empty}\captionsetup[table]{labelformat=empty}

#+LATEX_HEADER: \setLTRbibitems

#+LATEX_HEADER: \xpretocmd{\verbatim}{\begin{LTR}}{}{} \xapptocmd{\endverbatim}{\end{LTR}}{}{} \xpretocmd{\minted}{\VerbatimEnvironment\begin{latin}}{}{} \xapptocmd{\endminted}{\end{latin}}{}{}
#+LATEX_HEADER: \LetLtxMacro{\oldmintinline}{\mintinline}\renewcommand{\mintinline}[3][]{\lr{\oldmintinline[#1]{#2}{#3}}}
#+LATEX_HEADER: \SetupFloatingEnvironment{listing}{name=کد}

#+MACRO: lr @@latex:\lr{@@​$1​@@latex:}@@
#+MACRO: lt @@latex:\lr{@@​~$1~​@@latex:}@@
#+MACRO: fn [fn::$1]
#+MACRO: lfn [fn::@@latex:\lr{@@​$1​@@latex:}@@]
#+MACRO: sh src_sh[:exports code :results none]{$1}

#+BEGIN_titlingpage

# راست‌چین
# #+BEGIN_abstract
# چکیده
# #+END_abstract

#+LATEX: \tableofcontents
#+END_titlingpage

* فهرست :TOC_3:noexport:
- [[#مقدمه][مقدمه]]
- [[#پیش-نیازها][پیش نیازها]]

* مقدمه
* پیش نیازها
برای هر پروژهٔ IoT که در آن وضعیت سنسورها نیاز به تحلیل یا منطق داشته باشد نیاز به پردازنده‌ای قابل برنامه‌نویسی وجود دارد.
برای پشتیبانی از چنین سنسورهایی این پردازنده‌ها باید مجهز به پین‌‌های ورودی و خروجی عمومی یا GPIO{{{lfn(General Input Output Pins)}}} باشند تا بتوانند سیگنال‌های سنسورها را دریافت، اکتویتورها
را فعال و انرژی قطعات را تأمین کنند.

میکروکنترل‌ها پردازنده‌های کوچکی هستند که برای چنین پروژه‌هایی ساخته شده‌اند.
از این جهت می‌توان از چنین میکروکنترل‌هایی مانند آردوینو برای این پروژه استفاده کرد.
ما در این پروژه از برد {{{lr(Raspberry Pi 3B)}}} استفاده می‌کنیم که یک برد با پردازنده آرم و GPIO است.
برای اتصال سنسورها به GPIO احتیاج است.

سنسورها معمولاً ورودی‌های $3.3V$ و $5.0V$ استفاده می‌کنند.
در نتیجه مهم است که GPIO بتواند $5.0V$ را پشتیبانی کند در غیر این نیاز به یک PSU{{{lfn(Power Supply Unit)}}} جداگانه وجود دارد.

برای این پروژه ما سه ماژول گلدان هوشمند، تشخیص گاز و الکل‌ریز هوشمند نیازمند سنسورهای متفاوتی هستیم.
برای راحتی کار از ماژول‌های این سنسورها استفاده می‌کنیم که آماده به کار هستند روی یک برد هستند.
یک سنسور رطوبت خاک{{{lfn(YL-69)}}}, سنسور مجاورت مادون قرمز{{{lfn(IRFC51)}}} و سنسور گاز{{{lfn(MQ-5)}}} مورد استفاده است.

برای انجام فعالیت‌ها به دو عدد رله، یک موتور چرخشی و یک پمپ آب نیاز است.

به طور کل لیست وسایل مورد استفاده در این پروژه به شرح زیر است:
- سنسورها
  + ماژول رطوبت خاک
  + ماژول مجاورت مادون قرمز
  + ماژول تشخیص گاز
- عملگرها
  + موتور چرخش
  + پمپ آب
- سایر
  + {{{lr(Raspberry Pi 3B)}}}
  + سیم
  + رله (دوعدد یا یک رله دو کاناله)
  + بردبرد ({{{lr(Breadboard)}}}) (اختیاری)
  + PSU بردبرد (اختیاری)
  + سیستمی ثانوی (اختیاری در صورت استفاده از {{{lr(Raspberry)}}})

* راه‌اندازی اولیه برد پای
پیش از استفاده از برد پای روی آن سیستم‌عامل لینوکس را ریخته و نصب می‌کنیم.
پس از این، برای برنامه‌نویسی در پایتون نیاز به کتابخانهٔ [[https://pypi.org/project/RPi.GPIO/][RPi.GPIO]] برای مدیریت GPIO داریم که به طور پیش‌فرض روی توزیع {{{lr(Raspberry Pi OS)}}} و {{{lr(Raspbian)}}} موجود است.

برای کار با برد پای از طریق سیستمی ثانوی می‌توان با SSH یا کابل TTL که به پین‌های {{{lr(GND)}}}, 8 (کابل سفید) و 10 (کابل سبز) ارتباط برقرار می‌کند متصل شد.
پیش از برقراری این ارتباطاتات باید با {{{sh(raspberry-config)}}} قابلیت SSH یا/و سریال را فعال کرد.

پس از این با ادیتور مورد علاقه با پشتیبانی از SSH (مثلاً {{{lr(Emacs Tramp)}}}) یا ابزاری مناسب کار با TTL مانند {{{lr(tio)}}} به شکل {{{sh(tio /dev/ttyUSB)}}} به کدزدن پرداخت.

#+CAPTION: پین‌های GPIO برد پای
[[file:.piot-pins.png]]

* کار با ماژول‌ها
** ترمینولوژی
ماژول‌های پین‌هایی دارند که با عنوانی مانند =VCC=, =AO= و... نشانه‌گذاری شده‌اند.

پین =VCC= پین برق است. ابتدا باید مشخص کرد که برق مورد نیاز هر ماژول $3.3V$ یا $5.0V$ است.
ولتاژ کم رساندن به ماژول خطرساز نیست از بیش از ولتاژ مورد قبول به آن تحمیل کردن ممکن است باعث خرابی شود.
ماژول‌هایی که اینجا استفاده می‌کنیم همه از $5.0V$ استفاده می‌کنند.

پین =GND= پین منفی، پین =DO= پین خروجی دیجیتالی (دودویی) است و در نهایت پین =AO= پین
خروجی آنالوگ است.

معمولاً مقاومتی به نام پتانسیومتر (شکل ref:fg:potentiometer) روی این ماژول‌ها وجود دارد که آستانهٔ یک شدن =DO= را مشخص می‌کند.

#+CAPTION: پتانسیومترهای مختلف
file:.piot-potentiometer.png
